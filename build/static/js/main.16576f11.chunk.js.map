{"version":3,"sources":["phonebook.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","props","name","number","onClick","remove","Persons","persons","map","person","key","Filter","value","filter","onChange","handleFilterChange","PersonForm","onSubmit","addName","newName","handleNameChange","newNumber","handleNumberChange","type","Notification","message","className","ErrorNotification","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","successMessage","setSuccessMessage","errorMessage","setErrorMessage","useEffect","phoneBookService","console","log","personsToShow","includes","event","target","preventDefault","i","nameObject","length","found","window","confirm","henkilÃ¶","find","n","hId","updatedNumber","per","changedPerson","setTimeout","catch","error","update","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16576f11.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { \r\n  getAll: getAll, \r\n  create: create, \r\n  update: update, \r\n  remove: remove\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport phoneBookService from './phonebook'\r\nimport './index.css'\r\n\r\n\r\nconst Person = (props) => {\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            {props.name} {props.number} <button onClick={() => props.remove(props.id, props.name)}>delete</button>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Persons = (props) => {\r\n    return (\r\n        <div>\r\n\r\n            {props.persons.map(person =>\r\n\r\n                <Person key={person.id} id={person.id} name={person.name} number={person.number} remove={props.remove} />\r\n            )}\r\n\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nconst Filter = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            filter shown with: <input\r\n                value={props.filter}\r\n                onChange={props.handleFilterChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PersonForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.addName}>\r\n            <div>\r\n                name: <input\r\n                    value={props.newName}\r\n                    onChange={props.handleNameChange} />\r\n            </div>\r\n            <div>\r\n                number: <input\r\n                    value={props.newNumber}\r\n                    onChange={props.handleNumberChange} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"success\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const ErrorNotification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"error\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nconst App = () => {\r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [filter, setNewFilter] = useState('')\r\n    const [successMessage, setSuccessMessage] = useState(null)\r\n    const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        phoneBookService\r\n            .getAll()\r\n            .then(data => {\r\n                console.log(data)\r\n                setPersons(data)\r\n            })\r\n    }, [])\r\n\r\n    const remove = (id,name) => {\r\n        phoneBookService\r\n            .remove(id)\r\n            .then(data => {\r\n\r\n                console.log(\"DATA\", data)\r\n                setSuccessMessage(\r\n                    `Deleted ${name} `\r\n                  )\r\n                  setTimeout(() => {\r\n                    setSuccessMessage(null)\r\n                  }, 5000)\r\n                setPersons(persons.filter(per => per.id !== id))\r\n            })\r\n    }\r\n\r\n    const update = (id, updatedNumber) => {\r\n        const per = persons.find(n => n.id === id)\r\n        const changedPerson = { ...per, number: updatedNumber }\r\n\r\n        phoneBookService\r\n            .update(id, changedPerson)\r\n            .then(data => {\r\n\r\n                setSuccessMessage(\r\n                        `Ubdated ${data.name} `\r\n                      )\r\n                      setTimeout(() => {\r\n                        setSuccessMessage(null)\r\n                      }, 5000)\r\n                setPersons(persons.map(per => per.id !== id ? per : data))\r\n            }).catch(error => {\r\n\r\n                setErrorMessage(\r\n                    `Information of  ${changedPerson.name} has already been removed from the server `\r\n                  )\r\n                  setTimeout(() => {\r\n                    setErrorMessage(null)\r\n                  }, 5000)\r\n\r\n\r\n                setPersons(persons.filter(n => n.id !== id))\r\n            })\r\n    }\r\n\r\n\r\n\r\n    const handleNameChange = (event) => {\r\n\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNumberChange = (event) => {\r\n\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n\r\n        setNewFilter(event.target.value)\r\n    }\r\n\r\n    const addName = (event) => {\r\n        event.preventDefault()\r\n\r\n\r\n        const nameObject = {\r\n            name: newName,\r\n            number: newNumber,\r\n            id: persons.length + 100\r\n\r\n        }\r\n\r\n        var found = false\r\n        var i\r\n\r\n        for (i = 0; i < persons.length; i++) {\r\n            if (persons[i].name === nameObject.name) {\r\n                found = true\r\n            }\r\n        }\r\n\r\n        if (found) {\r\n            const r = window.confirm(`${nameObject.name} is already added to phonebook, replace the old number with a new one?`)\r\n            if (r == true) {\r\n                const henkilÃ¶ = persons.find(n => n.name === nameObject.name)\r\n                console.log(henkilÃ¶)\r\n                const hId = henkilÃ¶.id\r\n                console.log(hId)\r\n                update(hId, nameObject.number)\r\n            } else {\r\n                console.log(\"false\")\r\n            }\r\n        } else {\r\n\r\n\r\n            phoneBookService\r\n                .create(nameObject)\r\n                .then(data => {\r\n\r\n                    setSuccessMessage(\r\n                        `Added ${nameObject.name} `\r\n                      )\r\n                      setTimeout(() => {\r\n                        setSuccessMessage(null)\r\n                      }, 5000)\r\n\r\n                    setPersons(persons.concat(data))\r\n\r\n                }).catch (error => {\r\n\r\n                    console.log(error.response.data)\r\n\r\n                    setErrorMessage(\r\n                        error.response.data.error\r\n                      )\r\n                      setTimeout(() => {\r\n                        setErrorMessage(null)\r\n                      }, 5000)\r\n                })\r\n\r\n        }\r\n\r\n\r\n        setNewName('')\r\n        setNewNumber('')\r\n    }\r\n\r\n    const personsToShow = persons.filter(person => person.name.includes(filter))\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <h2>Phonebook</h2>\r\n            <Notification message={successMessage} />\r\n            <ErrorNotification message={errorMessage} />\r\n            <Filter filter={filter} handleFilterChange={handleFilterChange} />\r\n            <h2>add a new</h2>\r\n            <PersonForm addName={addName} newName={newName} handleNameChange={handleNameChange} newNumber={newNumber} handleNumberChange={handleNumberChange} />\r\n            <h2>Numbers</h2>\r\n            <Persons persons={personsToShow} remove={remove} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App  />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}